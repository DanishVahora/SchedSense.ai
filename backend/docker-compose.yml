services:
  # PostgreSQL Database for User Service
  postgres_db:
    image: postgres:15-alpine
    container_name: user_service_postgres
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/user-service/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d user_service_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL Database for Service Provider Service
  postgres_provider_db:
    image: postgres:15-alpine
    container_name: service_provider_postgres
    environment:
      POSTGRES_DB: service_provider_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5433:5432"
    volumes:
      - postgres_provider_data:/var/lib/postgresql/data
      - ./services/service-provider-service/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d service_provider_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres_db
      - postgres_provider_db
    networks:
      - app-network
    restart: unless-stopped

  voice-service:
    build: ./services/voice-service
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - app-network
    restart: unless-stopped

  ai-agent-service:
    build: ./services/ai-agent-service
    ports:
      - "3001:3001"
    networks:
      - app-network
    restart: unless-stopped

  booking-service:
    build: ./services/booking-service
    ports:
      - "3002:3002"
    networks:
      - app-network
    restart: unless-stopped

  notification-service:
    build: ./services/notification-service
    ports:
      - "3003:3003"
    networks:
      - app-network
    restart: unless-stopped

  user-service:
    build: ./services/user-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_NAME=user_service_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=MindMesh
      - JWT_EXPIRES_IN=24h
      - DOCKER_DB_HOST=postgres_db
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  service-provider-service:
    build: ./services/service-provider-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DB_HOST=postgres_provider_db
      - DB_PORT=5432
      - DB_NAME=service_provider_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=MindMesh_ServiceProvider_Secret
      - JWT_EXPIRES_IN=24h
      - DOCKER_DB_HOST=postgres_provider_db
    depends_on:
      postgres_provider_db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  api-gateway:
    build: ./api-gateway
    ports:
      - "80:80"
    environment:
      - NGINX_PORT=80
      - VOICE_SERVICE_HOST=voice-service
      - VOICE_SERVICE_PORT=8000
      - AI_AGENT_SERVICE_HOST=ai-agent-service
      - AI_AGENT_SERVICE_PORT=3001
      - BOOKING_SERVICE_HOST=booking-service
      - BOOKING_SERVICE_PORT=3002
      - NOTIFICATION_SERVICE_HOST=notification-service
      - NOTIFICATION_SERVICE_PORT=3003
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=3004
      - SERVICE_PROVIDER_SERVICE_HOST=service-provider-service
      - SERVICE_PROVIDER_SERVICE_PORT=3005
      - NGINX_LOG_LEVEL=info
    depends_on:
      - voice-service
      - ai-agent-service
      - booking-service
      - notification-service
      - user-service
      - service-provider-service
      - postgres_db
      - postgres_provider_db
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  postgres_provider_data:
    driver: local
  pgadmin_data:
    driver: local
